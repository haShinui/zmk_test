/*

 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// #define HOST_OS 2  // set to 2 for macOS/Windows-Alt-Codes, default is 0 (Windows)
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include "helper.h"
#include "german.dtsi"

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&mt DEL ESC  &kp Q           &kp W           &kp F        &kp P      &kp B    &kp J  &kp L           &kp U          &kp Y            &kp SEMICOLON    &kp DELETE
&key_repeat  &mt LEFT_WIN A  &mt LEFT_ALT R  &mt LCTRL S  &kp T      &kp G    &kp M  &kp N           &mt RCTRL E    &mt RIGHT_ALT I  &mt RIGHT_WIN O  &kp SQT
&lt 2 LCTRL  &kp Z           &kp X           &kp C        &kp D      &kp V    &kp K  &kp H           &kp COMMA      &kp DOT          &kp FSLH         &kp ENTER
                                              &kp TAB      &kt SPACE  &mo 1    &mo 2  &kt LEFT_SHIFT  &kp BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&kp TAB        &kp N1                        &kp N2                &kp N3                        &kp N4      &kp N5          &kp N6        &kp N7          &kp NUMBER_8  &kp N9          &kp N0     &kp BSPC
&kp BACKSPACE  &kt K_COPY                    &kt K_PASTE           &kt K_CUT                     &kt K_REDO  &kt K_UNDO      &mkp LCLK     &kp LEFT        &kp UP        &kp DOWN_ARROW  &kt RIGHT  &mkp RCLK
&kp DELETE     &de_ae_oe  &de_oe  &de_ue  &trans      &kp CAPSLOCK    &kp LEFT_WIN  &kt C_AC_HOME   &kt PAGE_UP   &kt PAGE_DOWN   &kt END    &trans
                                                                   &trans                        &trans      &trans          &kp RCTRL     &kp LEFT_SHIFT  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0              &bt BT_SEL 1      &bt BT_SEL 2       &bt BT_SEL 3    &bt BT_SEL 4        &mt F1 F7        &mt F2 F8         &mt F3 F9   &mt F4 F10    &mt F5 F11    &mt F6 F12
&kp MINUS   &kt EQUAL                 &kt LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GRAVE       &kp BACKSLASH       &kp PRINTSCREEN  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_UP  &kp C_VOL_DN  &kp K_MUTE
&trans      &mt K_LOCK K_SCREENSAVER  &kt C_AL_LOGOFF   &trans             &trans          &kt LEFT_WIN        &kp A            &trans            &trans      &trans        &kp DELETE    &kp BACKSPACE
                                                        &kp LEFT_ALT       &kt LEFT_SHIFT  &kp LEFT_CONTROL    &trans           &trans            &trans
            >;
        };
    };
};